// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model Customer {
  id          String  @id @default(uuid())
  name        String
  email       String  @unique
  phoneNumber String  @unique
  address     String
  orders      Order[]
}

model Restaurant {
  id        String     @id @default(uuid())
  name      String     @unique
  location  String
  menuItems MenuItem[]
  orders    Order[]
}

model MenuItem {
  id           String      @id @default(uuid())
  restaurantId String
  name         String
  price        Decimal
  isAvailable  Boolean     @default(true)
  restaurant   Restaurant  @relation(fields: [restaurantId], references: [id])
  orderItems   OrderItem[]
}

model Order {
  id           String      @id @default(uuid())
  customerId   String
  customer     Customer    @relation(fields: [customerId], references: [id])
  restaurantId String
  restaurant   Restaurant  @relation(fields: [restaurantId], references: [id])
  status       OrderStatus @default(Placed)
  totalPrice   Decimal
  orderTime    DateTime    @default(now())
  orderItems   OrderItem[]
}

model OrderItem {
  id         String   @id @default(uuid())
  orderId    String
  order      Order    @relation(fields: [orderId], references: [id])
  menuItemId String
  menuItem   MenuItem @relation(fields: [menuItemId], references: [id])
  quantity   Int
}

enum OrderStatus {
  Placed
  Preparing
  Completed
  Cancelled
}